# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Weatherbot Backend on Linux

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare Setup
      run: sudo apt install -y libapr1-dev libcurl4-openssl-dev libjson-c-dev cmake binutils make rustc pkg-config
        
    - name: Clone smartnode/telebot PUBLIC repository
      uses: actions/checkout@v4
      with:
        repository: 'smartnode/telebot'
        ref: master
        path: telebot

    - name: Clone AhmedNGaber/weatherbot-rust-c-wrapper PRIVATE repository
      uses: actions/checkout@v4
      with:
        repository: 'AhmedNGaber/weatherbot-rust-c-wrapper'
        ref: master
        token: ${{ secrets.PA_TOKEN_ACTIONS }}
        path: weatherbot-rust-c-wrapper

    - name: Build 
      # Build Rust library
      run: cd ${{github.workspace}}/weatherbot-rust-c-wrapper && cargo build &&
           cd ${{github.workspace}} && mkdir build -p &&
           cd ${{github.workspace}}/build &&
           cmake .. && make telebot && make

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests
      run: ${{github.workspace}}/build/test/weatherbot_test

